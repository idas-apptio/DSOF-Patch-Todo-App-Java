---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: goof
  name: goof
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: goof
  template:
    metadata:
      labels:
        app: goof
    spec:
      containers:
      - image: ${DOCKER_ACCOUNT}/java-goof:latest
        imagePullPolicy: Always
        name: java-goof
        securityContext:
            runAsNonRoot: true
            runAsUser: 10000
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
              add:
                - CAPABILITY1
                - CAPABILITY2
        resources:
          limits:
            cpu: "1" # Set the required CPU limit value (e.g., 1 CPU core)
            memory: "512Mi" # Set the required memory limit value (e.g., 512 megabytes)
        livenessProbe:
          httpGet:
            path: /healthz  # Adjust the path to match your application's health check endpoint
            port: 80          # Adjust the port to match your application's container port
          initialDelaySeconds: 30  # Delay before the first probe
          periodSeconds: 10
        volumeMounts:
          - mountPath: /usr/local/tomcat/temp
            name: tomcat-temp
          - mountPath: /usr/local/tomcat/work
            name: tomcat-work
          - mountPath: /usr/local/tomcat/logs
            name: tomcat-logs
      restartPolicy: Always
      volumes:
        - name: tomcat-temp
          emptyDir: {}
        - name: tomcat-work
          emptyDir: {}
        - name: tomcat-logs
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: goof
  name: goof
spec:
  type: LoadBalancer
  loadBalancerSourceRanges:
    - 192.168.1.10/32   # Specific IP address
    - 192.168.2.0/24    # IP range
  ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app: goof
